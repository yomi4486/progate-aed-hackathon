[project]
name = "progate-aed-hackathon"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.15",
    "beautifulsoup4>=4.13.5",
    "bitarray>=3.7.1",
    "boto3>=1.40.25",
    "fastapi[standard]>=0.116.1",
    "langdetect>=1.0.9",
    "lxml>=6.0.1",
    "mecab-python3>=1.0.10",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pynamodb>=6.1.0",
    "pyyaml>=6.0.2",
    "redis>=6.4.0",
    "structlog>=25.4.0",
    "unidic-lite>=1.0.8",
    "uvicorn>=0.35.0",
    "xxhash>=3.5.0",
]

[dependency-groups]
dev = [
    "aioresponses>=0.7.8",
    "boto3-stubs[dynamodb,essential]>=1.40.26",
    "progate-aed-hackathon",
    "pyright>=1.1.405",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "pytest-mock>=3.15.0",
    "ruff>=0.12.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pyright]
include = ["app", "tools"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
]
typeCheckingMode = "strict"
pythonVersion = "3.12"
reportMissingTypeStubs = false

[tool.uv.sources]
progate-aed-hackathon = { workspace = true }

[project.scripts]
pydantic2ts = "tools.pydantic2ts.__main__:main"
migrate = "tools.migrate.__main__:main"
routes2rpcc = "tools.routes2rpcc.__main__:main"
indexer = "app.indexer.cli:main"
crawler = "app.crawler.worker:main"
